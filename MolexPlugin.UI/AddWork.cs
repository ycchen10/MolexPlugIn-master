//==============================================================================
//  WARNING!!  This file is overwritten by the Block UI Styler while generating
//  the automation code. Any modifications to this file will be lost after
//  generating the code again.
//
//       Filename:  C:\Users\ycchen10\OneDrive - kochind.com\Desktop\MolexPlugIn-12.0\UI\AddWork.cs
//
//        This file was generated by the NX Block UI Styler
//        Created by: ycchen10
//              Version: NX 11
//              Date: 02-26-2020  (Format: mm-dd-yyyy)
//              Time: 16:26 (Format: hh-mm)
//
//==============================================================================

//==============================================================================
//  Purpose:  This TEMPLATE file contains C# source to guide you in the
//  construction of your Block application dialog. The generation of your
//  dialog file (.dlx extension) is the first step towards dialog construction
//  within NX.  You must now create a NX Open application that
//  utilizes this file (.dlx).
//
//  The information in this file provides you with the following:
//
//  1.  Help on how to load and display your Block UI Styler dialog in NX
//      using APIs provided in NXOpen.BlockStyler namespace
//  2.  The empty callback methods (stubs) associated with your dialog items
//      have also been placed in this file. These empty methods have been
//      created simply to start you along with your coding requirements.
//      The method name, argument list and possible return values have already
//      been provided for you.
//==============================================================================

//------------------------------------------------------------------------------
//These imports are needed for the following template code
//------------------------------------------------------------------------------
using System;
using NXOpen;
using NXOpen.BlockStyler;
using NXOpen.UF;
using Basic;
using MolexPlugin.DAL;
using System.Collections.Generic;

namespace MolexPlugin
{

    //------------------------------------------------------------------------------
    //Represents Block Styler application class
    //------------------------------------------------------------------------------
    public class AddWork
    {
        //class members
        private static Session theSession = null;
        private static UFSession theUFSession = null;
        private static UI theUI = null;
        private string theDlxFileName;
        private NXOpen.BlockStyler.BlockDialog theDialog;
        private NXOpen.BlockStyler.Group group0;// Block type: Group
        private NXOpen.BlockStyler.Toggle addOrModify;// Block type: Toggle
        private NXOpen.BlockStyler.Enumeration workNumber;// Block type: Enumeration
        private NXOpen.BlockStyler.Group group;// Block type: Group
        private NXOpen.BlockStyler.Group groupPart;// Block type: Group
        private NXOpen.BlockStyler.SelectObject selePart;// Block type: Selection
        private NXOpen.BlockStyler.SelectObject selePoint;// Block type: Selection
        private NXOpen.BlockStyler.Button button_X;// Block type: Button
        private NXOpen.BlockStyler.Button button_Y;// Block type: Button
        private NXOpen.BlockStyler.Button button_Z;// Block type: Button
        private Part asmPart;
        private List<int> numbers;
        private MoveObjectBasic moveObjectBasic = null;
        private Point selectionPt = null;
        private Face selectionFace = null;
        private List<NXObject> nxObjects = new List<NXObject>();
        private List<NXObject> points = new List<NXObject>();
        //------------------------------------------------------------------------------
        //Constructor for NX Styler class
        //------------------------------------------------------------------------------
        public AddWork()
        {
            try
            {
                theSession = Session.GetSession();
                theUFSession = UFSession.GetUFSession();
                theUI = UI.GetUI();
                theDlxFileName = "AddWork.dlx";
                theDialog = theUI.CreateDialog(theDlxFileName);
                theDialog.AddApplyHandler(new NXOpen.BlockStyler.BlockDialog.Apply(apply_cb));
                theDialog.AddOkHandler(new NXOpen.BlockStyler.BlockDialog.Ok(ok_cb));
                theDialog.AddUpdateHandler(new NXOpen.BlockStyler.BlockDialog.Update(update_cb));
                theDialog.AddFilterHandler(new NXOpen.BlockStyler.BlockDialog.Filter(filter_cb));
                theDialog.AddInitializeHandler(new NXOpen.BlockStyler.BlockDialog.Initialize(initialize_cb));
                theDialog.AddDialogShownHandler(new NXOpen.BlockStyler.BlockDialog.DialogShown(dialogShown_cb));


            }
            catch (Exception ex)
            {
                //---- Enter your exception handling code here -----
                throw ex;
            }
        }

        //------------------------------------------------------------------------------
        //This method shows the dialog on the screen
        //------------------------------------------------------------------------------
        public NXOpen.UIStyler.DialogResponse Show()
        {
            try
            {
                asmPart = ElectrodeAssembleCollection.GetAsmCollection();
                if (asmPart == null)
                {
                    theUI.NXMessageBox.Show("错误", NXMessageBox.DialogType.Error, "无法找到ASM档!");
                    return 0;
                }
                theDialog.Show();
            }
            catch (Exception ex)
            {
                //---- Enter your exception handling code here -----
                theUI.NXMessageBox.Show("Block Styler", NXMessageBox.DialogType.Error, ex.ToString());
            }
            return 0;
        }

        //------------------------------------------------------------------------------
        //Method Name: Dispose
        //------------------------------------------------------------------------------
        public void Dispose()
        {
            if (theDialog != null)
            {
                theDialog.Dispose();
                theDialog = null;
            }
        }

        //------------------------------------------------------------------------------
        //---------------------Block UI Styler Callback Functions--------------------------
        //------------------------------------------------------------------------------

        //------------------------------------------------------------------------------
        //Callback Name: initialize_cb
        //------------------------------------------------------------------------------
        public void initialize_cb()
        {
            try
            {
                group0 = (NXOpen.BlockStyler.Group)theDialog.TopBlock.FindBlock("group0");
                addOrModify = (NXOpen.BlockStyler.Toggle)theDialog.TopBlock.FindBlock("addOrModify");
                workNumber = (NXOpen.BlockStyler.Enumeration)theDialog.TopBlock.FindBlock("workNumber");
                group = (NXOpen.BlockStyler.Group)theDialog.TopBlock.FindBlock("group");
                groupPart = (NXOpen.BlockStyler.Group)theDialog.TopBlock.FindBlock("groupPart");
                selePart = (NXOpen.BlockStyler.SelectObject)theDialog.TopBlock.FindBlock("selePart");
                selePoint = (NXOpen.BlockStyler.SelectObject)theDialog.TopBlock.FindBlock("selePoint");
                button_X = (NXOpen.BlockStyler.Button)theDialog.TopBlock.FindBlock("button_X");
                button_Y = (NXOpen.BlockStyler.Button)theDialog.TopBlock.FindBlock("button_Y");
                button_Z = (NXOpen.BlockStyler.Button)theDialog.TopBlock.FindBlock("button_Z");
                #region 过滤
                Selection.MaskTriple maskComp = new Selection.MaskTriple()
                {
                    Type = 63,
                    Subtype = 1,
                    SolidBodySubtype = 0
                };
                Selection.MaskTriple[] masks = { maskComp };
                selePart.SetSelectionFilter(Selection.SelectionAction.ClearAndEnableSpecific, masks);//过滤只选择组件

                Selection.MaskTriple maskFace = new Selection.MaskTriple()
                {
                    Type = 70,
                    Subtype = 2,
                    SolidBodySubtype = 20
                };
                Selection.MaskTriple maskPoint = new Selection.MaskTriple()
                {
                    Type = 2,
                    Subtype = 0,
                    SolidBodySubtype = 0
                };

                Selection.MaskTriple[] masks1 = { maskFace, maskPoint };
                selePoint.SetSelectionFilter(Selection.SelectionAction.ClearAndEnableSpecific, masks1);//过滤只选择点和面
                #endregion


            }



            catch (Exception ex)
            {
                //---- Enter your exception handling code here -----
                theUI.NXMessageBox.Show("Block Styler", NXMessageBox.DialogType.Error, ex.ToString());
            }
        }

        //------------------------------------------------------------------------------
        //Callback Name: dialogShown_cb
        //This callback is executed just before the dialog launch. Thus any value set 
        //here will take precedence and dialog will be launched showing that value. 
        //------------------------------------------------------------------------------
        public void dialogShown_cb()
        {
            try
            {
                //---- Enter your callback code here -----
                addOrModify.Value = true;
                this.numbers = AddWorkBuilder.GetWorkNumber(asmPart);
                numbers.Sort();
                string[] members = { "WORK" + (numbers[numbers.Count - 1] + 1).ToString() };
                workNumber.Enable = false;
                workNumber.SetEnumMembers(members);

            }
            catch (Exception ex)
            {
                //---- Enter your exception handling code here -----
                theUI.NXMessageBox.Show("Block Styler", NXMessageBox.DialogType.Error, ex.ToString());
            }
        }

        //------------------------------------------------------------------------------
        //Callback Name: apply_cb
        //------------------------------------------------------------------------------
        public int apply_cb()
        {
            int errorCode = 0;
            try
            {
                //---- Enter your callback code here -----
                Part workPart = theSession.Parts.Work;

                CoordinateSystem wcs = workPart.WCS.CoordinateSystem;
               
                Matrix4 matr = new Matrix4();
                matr.Identity();
                matr.TransformToCsys(wcs, ref matr);
                string number = this.workNumber.ValueAsString.Substring(4);
               
                if (addOrModify.Value)
                {
                    AddWorkBuilder.CreateWork(matr, Convert.ToInt32(number), asmPart);
                }
                else
                {
                    AddWorkBuilder.AlterMatr(matr, Convert.ToInt32(number), asmPart);
                }
                CartesianCoordinateSystem csys = workPart.WCS.Save();

                csys.Name = this.workNumber.ValueAsString;
                csys.Layer = 200;
                csys.Color = 186;
                
                PartUtils.SetPartDisplay(asmPart);
                CsysUtils.SetWcsToAbs();
                DeleteObject.Delete(this.points.ToArray());
                bool anyPartsModified1;
                NXOpen.PartSaveStatus partSaveStatus1;
                Session.GetSession().Parts.SaveAll(out anyPartsModified1, out partSaveStatus1);
            }
            catch (Exception ex)
            {
                //---- Enter your exception handling code here -----
                errorCode = 1;
                theUI.NXMessageBox.Show("Block Styler", NXMessageBox.DialogType.Error, ex.ToString());
            }
            return errorCode;
        }

        //------------------------------------------------------------------------------
        //Callback Name: update_cb
        //------------------------------------------------------------------------------
        public int update_cb(NXOpen.BlockStyler.UIBlock block)
        {
            try
            {
                if (block == addOrModify)
                {
                    //---------Enter your code here-----------
                    if (addOrModify.Value)
                    {
                        addOrModify.Label = "添加WORK";

                        string[] members = { "WORK" + (numbers[numbers.Count - 1] + 1).ToString() };
                        workNumber.Enable = false;
                        workNumber.SetEnumMembers(members);
                    }
                    else
                    {
                        addOrModify.Label = "修改WORK";
                        List<string> members = new List<string>();
                        foreach (int i in numbers)
                        {
                            members.Add("WORK" + i.ToString());
                        }
                        workNumber.Enable = true;
                        workNumber.SetEnumMembers(members.ToArray());
                    }


                }
                else if (block == workNumber)
                {
                    //---------Enter your code here-----------

                }
                else if (block == selePart)
                {
                    //---------Enter your code here-----------
                    Part part = (this.selePart.GetSelectedObjects()[0] as NXOpen.Assemblies.Component).Prototype as Part;
                    List<NXObject> partBody = new List<NXObject>();
                    foreach (Body body in part.Bodies)
                    {
                        partBody.Add(body);
                    }
                    this.moveObjectBasic = new MoveObjectBasic(partBody);
                    points = moveObjectBasic.CreatePoint();
                }
                else if (block == selePoint)
                {
                    TaggedObject obj = selePoint.GetSelectedObjects()[0];
                    //---------Enter your code here-----------
                    if (obj is Point)
                        this.selectionPt = obj as Point;
                    if (obj is Face)
                        this.selectionFace = obj as Face;
                    if (selectionPt != null)
                    {
                        Point3d temp;
                        if (selectionFace != null)
                            temp = moveObjectBasic.GetPointToFaceDis(selectionPt, selectionFace);
                        else
                            temp = selectionPt.Coordinates;
                        CsysUtils.SetWcsOfCentePoint(temp);
                    }
                }
                else if (block == button_X)
                {
                    //---------Enter your code here-----------
                    CsysUtils.RotateWcs(WCS.Axis.XAxis, 90);
                }
                else if (block == button_Y)
                {
                    //---------Enter your code here-----------
                    CsysUtils.RotateWcs(WCS.Axis.YAxis, 90);
                }
                else if (block == button_Z)
                {
                    //---------Enter your code here-----------
                    CsysUtils.RotateWcs(WCS.Axis.ZAxis, 90);
                }
            }
            catch (Exception ex)
            {
                //---- Enter your exception handling code here -----
                theUI.NXMessageBox.Show("Block Styler", NXMessageBox.DialogType.Error, ex.ToString());
            }
            return 0;
        }

        //------------------------------------------------------------------------------
        //Callback Name: ok_cb
        //------------------------------------------------------------------------------
        public int ok_cb()
        {
            int errorCode = 0;
            try
            {
                errorCode = apply_cb();
                //---- Enter your callback code here -----
            }
            catch (Exception ex)
            {
                //---- Enter your exception handling code here -----
                errorCode = 1;
                theUI.NXMessageBox.Show("Block Styler", NXMessageBox.DialogType.Error, ex.ToString());
            }
            return errorCode;
        }

        //------------------------------------------------------------------------------
        //Callback Name: filter_cb
        //------------------------------------------------------------------------------
        public int filter_cb(NXOpen.BlockStyler.UIBlock block, NXOpen.TaggedObject selectedObject)
        {
            Model.MoldInfoModel info = new Model.MoldInfoModel();
            info.GetAttribute(asmPart);
            if (this.selePart.GetSelectedObjects().Length != 0)
            {
                Part part = (this.selePart.GetSelectedObjects()[0] as NXOpen.Assemblies.Component).Prototype as Part;
                if (!part.Name.Equals(info.MoldNumber + "-" + info.WorkpieceNumber + info.EditionNumber))
                {
                    return UFConstants.UF_UI_SEL_REJECT;
                }
                if (selectedObject is Face)
                {
                    Face seleFace = selectedObject as Face;
                    Part selePart = (seleFace.Prototype as Face).OwningPart as Part;

                    if (selePart.Tag != part.Tag)
                        return UFConstants.UF_UI_SEL_REJECT;
                }
            }
            return (NXOpen.UF.UFConstants.UF_UI_SEL_ACCEPT);
        }

        //------------------------------------------------------------------------------
        //Function Name: GetBlockProperties
        //Returns the propertylist of the specified BlockID
        //------------------------------------------------------------------------------
        public PropertyList GetBlockProperties(string blockID)
        {
            PropertyList plist = null;
            try
            {
                plist = theDialog.GetBlockProperties(blockID);
            }
            catch (Exception ex)
            {
                //---- Enter your exception handling code here -----
                theUI.NXMessageBox.Show("Block Styler", NXMessageBox.DialogType.Error, ex.ToString());
            }
            return plist;
        }
    }
}
